# This is a basic workflow to help you get started with Actions

name: Building CI on Unity for Team 1 PFE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Set start time for build naming
      - name: Set Start Time
        run: echo "START_TIME=$(TZ=":Europe/Paris" date +'%Y_%m_%d_%H_%M_%S')" >> $GITHUB_ENV
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checking out Git
        uses: actions/checkout@v4
        
      # Gives the Unity License and builds
      - name: Registering License
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: Build_StandaloneWindows64_${{ env.START_TIME }}
          buildsPath: Builds
          targetPlatform: StandaloneWindows64
          allowDirtyBuild: true

      # Stores a build artefact
      - name: Storing Build Artefact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: Build_StandaloneWindows64_${{ env.START_TIME }}
          path: Builds/StandaloneWindows64
          retention-days: 14 #Day before artifact being destroyed
          
      # Compress the build folder for Discord attachment
      - name: Compress build folder
        run: |
          cd Builds/StandaloneWindows64
          zip -r ../../Build_StandaloneWindows64_${{ env.START_TIME }}.zip .
          cd ../..
      
      # Send build artifact to Discord with embed in a single message
      - name: Send Discord notification with file
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          username: "Unity Build Bot"
          avatar-url: "https://unity.com/favicon.ico"
          embed-title: "Nouveau build Unity disponible"
          embed-description: "Build généré le ${{ env.START_TIME }} pour Team 1 PFE\nCommit: ${{ github.event.head_commit.message }}\nAuteur: ${{ github.event.head_commit.author.name }}"
          embed-color: 65280
          filename: Build_StandaloneWindows64_${{ env.START_TIME }}.zip
          
      # Cache to make next builds faster
      - name: Caching
        uses: actions/cache@v3
        with:
          path: path/to/your/project/Library
          key: Library-MyProjectName-TargetPlatform
          restore-keys: |
            Library-MyProjectName-
            Library-
            
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.